[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Oracle Corporation Java 11.0.14)
[debug]       Load.loadUnit: plugins took 131.5312ms
[debug]       Load.loadUnit: defsScala took 0.6793ms
[debug] [Loading] Scanning directory C:\Users\Franz\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Franz\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 30.5562 ms
[debug]           Load.resolveProject(global-plugins) took 75.2321ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Franz\.sbt\1.0\plugins, plugins: List(<none>))) took 145.2732ms
[debug] [Loading] Done in C:\Users\Franz\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 178.6254ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3652ms
[debug]     Load.loadUnit(file:/C:/Users/Franz/.sbt/1.0/plugins/, ...) took 326.8233ms
[debug]   Load.apply: load took 585.936ms
[debug]   Load.apply: resolveProjects took 7.1443ms
[debug]   Load.apply: finalTransforms took 96.0545ms
[debug]   Load.apply: config.delegates took 19.5762ms
[debug]   Load.apply: Def.make(settings)... took 608.7024ms
[debug]   Load.apply: structureIndex took 130.0934ms
[debug]   Load.apply: mkStreams took 2.1412ms
[info] loading global plugins from C:\Users\Franz\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3420.4731ms
[debug]           Load.loadUnit: plugins took 32.6686ms
[debug]           Load.loadUnit: defsScala took 0.0048ms
[debug] [Loading] Scanning directory C:\Users\Franz\IdeaProjects\SbtExampleProject\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Franz\IdeaProjects\SbtExampleProject\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.5288 ms
[debug]               Load.resolveProject(sbtexampleproject-build) took 1.4742ms
[debug]             Load.loadTransitive: finalizeProject(Project(id sbtexampleproject-build, base: C:\Users\Franz\IdeaProjects\SbtExampleProject\project, plugins: List(<none>))) took 4.6923ms
[debug] [Loading] Done in C:\Users\Franz\IdeaProjects\SbtExampleProject\project, returning: (sbtexampleproject-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 7.6612ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.0232ms
[debug]         Load.loadUnit(file:/C:/Users/Franz/IdeaProjects/SbtExampleProject/project/, ...) took 41.5171ms
[debug]       Load.apply: load took 43.6721ms
[debug]       Load.apply: resolveProjects took 0.2149ms
[debug]       Load.apply: finalTransforms took 10.9465ms
[debug]       Load.apply: config.delegates took 0.5138ms
[debug]       Load.apply: Def.make(settings)... took 79.4444ms
[debug]       Load.apply: structureIndex took 42.4029ms
[debug]       Load.apply: mkStreams took 0.0037ms
[info] loading project definition from C:\Users\Franz\IdeaProjects\SbtExampleProject\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 1898.7722ms
[debug]     Load.loadUnit: defsScala took 0.0035ms
[debug] [Loading] Scanning directory C:\Users\Franz\IdeaProjects\SbtExampleProject
[debug]       Load.loadUnit: mkEval took 7.3764ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.7787 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 4.7517ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\Franz\IdeaProjects\SbtExampleProject, plugins: List(<none>))) took 9.3575ms
[debug] [Loading] Done in C:\Users\Franz\IdeaProjects\SbtExampleProject, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 3087.8159ms
[debug]     Load.loadUnit: cleanEvalClasses took 20.7777ms
[debug]   Load.loadUnit(file:/C:/Users/Franz/IdeaProjects/SbtExampleProject/, ...) took 5008.2336ms
[debug] Load.apply: load took 5010.4204ms
[debug] Load.apply: resolveProjects took 1.1053ms
[debug] Load.apply: finalTransforms took 11.4751ms
[debug] Load.apply: config.delegates took 0.6509ms
[debug] Load.apply: Def.make(settings)... took 169.1207ms
[debug] Load.apply: structureIndex took 31.4079ms
[debug] Load.apply: mkStreams took 0.0028ms
[info] set current project to SbtExampleProject (in build file:/C:/Users/Franz/IdeaProjects/SbtExampleProject/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:sbt-server-0aec7ecc2da1c0123aa0
[debug] Writing bsp connection file
[info] started sbt server
